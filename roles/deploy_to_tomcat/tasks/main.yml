---
- name: Change owner of directory
  file:
    path: "{{ansible_env.CATALINA_HOME}}"
    recurse: true
    owner: tomcat
    group: tomcat
    state: directory
  become: true
  become_user: root

# TODO: Proceed healthcheck

- name: Check is artifact copied to webapps folder
  stat:
    path: "{{ansible_env.CATALINA_HOME}}/webapps/{{artifact_name}}"
  register: artifact_stat_result

- name: Backup previous version
  copy:
    src: "{{ansible_env.CATALINA_HOME}}/webapps/{{artifact_name}}"
    remote_src: true
    dest: "{{ansible_env.CATALINA_HOME}}/webapps/{{artifact_name}}.bkp"
    owner: tomcat
    group: tomcat
    mode: 0644
  when: artifact_stat_result.stat.exists

- name: Check is artfact deployed
  command: >-
    /usr/bin/curl --user {{deployer}}:{{deployer_password}}
    http://localhost:{{tomcat_port}}/manager/text/list
  register: tomcat_app_list

- name: Undeploy previous artefact
  command: >-
    /usr/bin/curl --user {{deployer}}:{{deployer_password}}
    http://localhost:{{tomcat_port}}/manager/text/undeploy?path=/{{deploy_uri}}
  when: "deploy_uri in tomcat_app_list.stdout"

- name: Copy artifact to remote
  copy:
    src: "{{artifact_path}}"
    dest: "/tmp/{{artifact_name}}"
    owner: tomcat
    group: tomcat
    mode: 0644

- name: Ensure curl is installed
  package:
    state: present
    name: curl
  become: true
  become_user: root

- name: Download artifact to tomcat manager
  command: >-
    /usr/bin/curl --user {{deployer}}:{{deployer_password}}
    --upload-file /tmp/{{artifact_name}}
    http://localhost:{{tomcat_port}}/manager/text/deploy?path=/{{deploy_uri}}
  register: deploy_output
  failed_when: deploy_output.stdout is search('FAIL')

- name: Add node to loadbalancer
  include_role:
    name: httpd
    tasks_from: include_node
  vars:
    node_hostname: "{{inventory_hostname}}"
  delegate_to: httpd
